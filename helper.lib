#!/bin/bash

help() {
    echo -e "recon.sh: bash recon.sh [-f][-d][-t][-h]\n"
    echo "   OPTIONS:"
    echo "     -f      specify a file with all domains seperate by linebreaks"
    echo "     -d      sets the domain to scan (for each domain set a -d flag)"
    echo "     -t      specify which tool to run (default: all tools)"
    echo "     -h      show help page (this)"
}

create_output_dir() {
    if [ ! -d "$OUTPUT_DIR" ]
    then
        echo "Creating ${OUTPUT_DIR}..."
        mkdir $OUTPUT_DIR
    fi
}

env_check() {
    if [ ! -f .env ]
    then
        echo -e "ERROR: .env file missing\n"
        echo -e "File must contain the follow variables"
        echo -e "   PATH_TO_SUBLIST3R=/PATH/TO/SUBLIST3R"
        echo -e "   PATH_TO_CRTSH=/PATH/TO/CRTSH"
        echo -e "   PATH_TO_DIRSEARCH=/PATH/TO/DIRSEARCH"
        echo -e "   PATH_TO_GITHUB_SUBDOMAINS=/PATH/TO/GITHUB_SUBDOMAINS"
        echo -e "   GITHUB_TOKEN=YOUR GITHUB TOKEN FOR GITHUB SUBDOMAINS\n"
        echo -e "Make sure not to share you GitHub Token"
        exit 1
    fi
}

create_report() {
    for entry in ${OUTPUT_DIR}/*
    do
        IFS="_"
        read -ra TOOL_DOMAIN <<< $entry
        # echo ${TOOL_DOMAIN[1]}
        if [ ! -f ${OUTPUT_DIR}/report_${TOOL_DOMAIN[1]} ]
        then
            unset IFS
            FILES=$(grep -Ril ${OUTPUT_DIR} -e ${TOOL_DOMAIN[1]})
            sort -u $FILES > ${OUTPUT_DIR}/report_${TOOL_DOMAIN[1]}
        fi
    done
}